#This script combines, modifies, and shortens the code from heal.lic and empheal.lic. NOTE: It also corrects a mana check error for healing scars. empheal.lic was not checking for the correct amount of mana. -Jonty

#Syntaxt is: ";heal" to just heal yourself, ";heal [person1] [person2] ... etc." to heal patients

cure = proc {|wound,type,rank,castS|
	if wound =~ /hand|arm|leg/ then castS.call(1102 + type,2 + rank,wound)
	elsif wound =~ /nerve/ then castS.call(1103 + type,3 + rank,wound)
	elsif wound =~ /head|neck/ then castS.call(1104 + type,4 + rank,wound)
	elsif wound =~ /eye|ab|chest|back/ then castS.call(1105 + type,5 + rank,wound) end
}
castS = proc {|spell,cost,wound|
	wait_until('Waiting on mana...') { mana(cost) }; fput "prep #{spell}"; fput "cure #{wound}"; sleep 3; waitrt?
}
cureBlood = proc {|castS|
	until percenthealth == 100
		castS.call(1101,(maxhealth - health?) / 10,"")
	end
}
chkSev =proc {|area,wound,cure,castS|
	if Wounds.send(area) == 3 then cure.call(wound,0,5,castS) end
}
script.vars.shift
until script.vars.empty?
	target = script.vars.shift
	fput "appraise #{target}"
	wound_check = waitfor("You take a quick appraisal of", "Appraise what?", "Wouldn't it be easier")
    scar_check = matchtimeout 1, "He has", "She has"
    unless not scar_check.nil? || scar_check == 0
		wound_line = wound_check + scar_check
	else
		wound_line = wound_check
		echo wound_line.to_s
	end
	if wound_line =~ /You take a quick appraisal of (\w+)/ then target = $1.dup
	else next end
	if wound_line.include?(',')
		wound_array = wound_line.split(/You take a quick appraisal of|,/)
	else
		wound_array = wound_line.scan(/a (?:blinded|swollen|bruised) (?:left|right) eye|deep lacerations across (?:his|her) \w+|deep gashes and serious bleeding (?:on|from|across) (?:his|her) \w+|minor cuts and bruises on (?:his|her) (?:left|right) (?:hand|arm|leg)|a (?:fractured and bleeding|completely severed) (?:left|right) (?:hand|arm|leg)|moderate bleeding from (?:his|her) neck|snapped bones and serious bleeding from the neck|minor bruises on (?:his|her) neck|minor (?:bruises|lacerations) about the head|minor cuts and bruises on (?:his|her) (?:chest|back|abdominal area)|scar across (?:his|her) neck|severe head trauma and bleeding from the ears|strange case of muscle twitching|old battle scars on (?:his|her) (?:left|right) (?:hand|arm|leg)|case of (?:sporadic|uncontrollable) convulsions/)
	end
	wounds = Array.new
	wound_array.each { |wound|
		if wound =~ /(a blinded|a swollen|a bruised|deep lacerations across his|deep lacerations across her|cuts and bruises on his|old battle scars on his|old battle scars on her|cuts and bruises on her|fractured and bleeding|completely severed|deep gashes and serious bleeding on his|deep gashes and serious bleeding on her|deep gashes and serious bleeding from his|deep gashes and serious bleeding from her) (\w+)( \w+)?/
			wounds.push("#{$2.dup} #{$3.dup}")
		elsif wound =~ /moderate bleeding from (his|her) neck|snapped bones and serious bleeding from the neck|scar across (?:his|her) neck|minor bruises on (his|her) neck/
			wounds.push("neck")
		elsif wound =~ /minor bruises about the head|minor lacerations about the head|severe head trauma and bleeding from the ears/
			wounds.push("head")
		elsif wound =~ /strange case of muscle twitching|case of sporadic convulsions|case of uncontrollable convulsions/
			wounds.push("nerves")
		else
			next
		end
	}
	wounds.each { |wound|
		wound = wound.split.join(' ')
		if wound =~ /(l|r)(?:eft|ight) (arm|hand|leg|eye)/ then chkSev.call("#{$1}#{$2}",wound,cure,castS)
		elsif wound =~ /abdom/ then wound = "abdomen"; chkSev.call("abs",wound,cure,castS)
		elsif wound =~ /(head|neck|chest|back|nerves)/ then chkSev.call(wound,wound,cure,castS) end
		echo target.to_s
		fput "transfer #{target} #{wound}"
	}
	bloodline = String.new
	until bloodline =~ /Nothing happens|all|Transfer from whom?|restored./
		if health? <= 75 then cureBlood.call(castS) end
		fput "transfer #{target}"
		bloodline = waitfor "Nothing happens", "You take some", "You take all", "Transfer from whom?", "appears entirely restored.", "pallor."
	end
end

# This is the level of wound you want the script to stop at... 1 would be a minor wound (rank 1). If you'd like it to go all the way to fully healed, just change the line so that the number is 0 instead of 1.
stop_at = 0

wound_hash = { 'head' => 'head', 'nerves' => 'nerves', 'neck' => 'neck', 'abs' => 'abdomen', 'chest' => 'chest', 'back' => 'back', 'leye' => 'left eye', 'reye' => 'right eye', 'rhand' => 'right hand', 'lhand' => 'left hand', 'larm' => 'left arm', 'rarm' => 'right arm', 'rleg' => 'right leg', 'lleg' => 'left leg' };
if (reallybleeding? and mana?) then fput "sign of staunching" end
wound_hash.each { |area,wound|
	while Wounds.send(area) > 1
		cure.call(wound,0,5,castS)
	end
}
if stop_at == 0
	wound_hash.each { |area,wound|
		if Wounds.send(area) > 0 then cure.call(wound,0,0,castS) end
	}
	wound_hash.each { |area,wound|
		while Scars.send(area) > 1
			cure.call(wound,9,13,castS)
		end
	}
	wound_hash.each { |area,wound|
		if Scars.send(area) > 0 then cure.call(wound,9,9,castS) end
	}
end
cureBlood.call(castS)
